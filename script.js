// –ò–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞
class Game {
    constructor() {
        this.score = 0;
        this.combo = 0;
        this.timeLeft = 10;
        this.gameActive = false;
        this.currentTech = null;
        this.techInterval = null;
        this.timerInterval = null;
        this.premiumActive = false;
        this.premiumButtonsPressed = new Set();
        this.premiumInterval = null;
        this.hasShownPremium = false;
        this.isAcidTheme = false;
        this.trapButtonVisible = false;
        this.commentTimeout = null;
        this.leaderboard = this.loadLeaderboard();
        
        // –°–ø–∏—Å–∫–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
        this.frontendTechs = [
            'React', 'Vue', 'Angular', 'JavaScript', 'TypeScript', 
            'HTML', 'CSS', 'SASS', 'Webpack', 'Vite', 'Next.js', 
            'Nuxt.js', 'Tailwind', 'Bootstrap', 'jQuery'
        ];
        
        this.backendTechs = [
            'Node.js', 'Python', 'Java', 'C#', 'PHP', 'Go', 'Rust',
            'Django', 'Flask', 'Express', 'Spring', 'Laravel', 
            'PostgreSQL', 'MongoDB', 'Redis', 'Docker'
        ];
        
        this.allTechs = [...this.frontendTechs, ...this.backendTechs];
        
        this.init();
    }
    
    init() {
        this.bindEvents();
        this.loadTheme();
        this.showWelcomeScreen();
    }
    
    loadTheme() {
        const savedTheme = localStorage.getItem('gameTheme');
        if (savedTheme === 'acid') {
            this.isAcidTheme = true;
            document.body.classList.add('acid-theme');
            document.getElementById('theme-btn').textContent = 'üåû';
        }
    }
    
    bindEvents() {
        // –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞ –∏–≥—Ä—ã
        document.getElementById('start-game-btn').addEventListener('click', () => {
            this.startGame();
        });
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã
        document.getElementById('theme-btn').addEventListener('click', () => {
            this.toggleTheme();
        });
        
        // –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        document.getElementById('pupa-btn').addEventListener('click', () => {
            this.makeChoice('frontend');
        });
        
        document.getElementById('lupa-btn').addEventListener('click', () => {
            this.makeChoice('backend');
        });
        
        // –ö–Ω–æ–ø–∫–∞-–ª–æ–≤—É—à–∫–∞
        document.getElementById('trap-btn').addEventListener('click', () => {
            this.trapButtonClicked();
        });
        
        // –ö–Ω–æ–ø–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        document.getElementById('play-again-btn').addEventListener('click', () => {
            this.startGame();
        });
        
        document.getElementById('back-to-menu-btn').addEventListener('click', () => {
            this.showWelcomeScreen();
        });
    }
    
    showWelcomeScreen() {
        document.getElementById('welcome-screen').classList.add('active');
        document.getElementById('game-screen').classList.remove('active');
        document.getElementById('result-screen').classList.remove('active');
    }
    
    startGame() {
        this.score = 0;
        this.combo = 0;
        this.timeLeft = 10;
        this.gameActive = true;
        
        // –ü–æ–∫–∞–∑–∞—Ç—å –∏–≥—Ä–æ–≤–æ–π —ç–∫—Ä–∞–Ω
        document.getElementById('welcome-screen').classList.remove('active');
        document.getElementById('game-screen').classList.add('active');
        document.getElementById('result-screen').classList.remove('active');
        
        // –û–±–Ω–æ–≤–∏—Ç—å UI
        this.updateScore();
        this.updateTimer();
        this.updateCombo();
        
        // –ù–∞—á–∞—Ç—å –ø–æ–∫–∞–∑ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
        this.startTechDisplay();
        
        // –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä
        this.startTimer();
        
        // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        document.getElementById('instruction-text').textContent = '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∫–æ–≥–¥–∞ —É–≤–∏–¥–∏—Ç–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é!';
        
        // –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É-–ª–æ–≤—É—à–∫—É
        this.hideTrapButton();
    }
    
    startTechDisplay() {
        // –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—É—é —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é —Å—Ä–∞–∑—É
        this.showRandomTech();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∫–∞–∂–¥—ã–µ 0.7-1.2 —Å–µ–∫—É–Ω–¥—ã
        this.techInterval = setInterval(() => {
            if (this.gameActive) {
                this.showRandomTech();
                // –ò–Ω–æ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É-–ª–æ–≤—É—à–∫—É
                this.showTrapButton();
            }
        }, Math.random() * 500 + 700); // 0.7-1.2 —Å–µ–∫—É–Ω–¥—ã
    }
    
    showRandomTech() {
        const techBadge = document.getElementById('tech-badge');
        const techText = document.getElementById('tech-text');
        
        // –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –ø—Ä–µ–º–∏—é –∑–∞ —Å–µ—Å—Å–∏—é
        let shouldShowPremium = false;
        if (!this.hasShownPremium && (Math.random() < 0.15 || this.timeLeft <= 3)) {
            shouldShowPremium = true;
            this.hasShownPremium = true;
        }
        
        if (shouldShowPremium) {
            this.currentTech = '–ü—Ä–µ–º–∏—è';
            this.premiumActive = true;
            this.premiumButtonsPressed.clear();
            techBadge.classList.add('premium');
            this.startPremiumMode();
        } else {
            this.currentTech = this.allTechs[Math.floor(Math.random() * this.allTechs.length)];
            this.premiumActive = false;
            techBadge.classList.remove('premium');
            this.stopPremiumMode();
        }
        
        techText.textContent = this.currentTech;
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        techBadge.style.animation = 'none';
        setTimeout(() => {
            techBadge.style.animation = 'techAppear 0.5s ease-out';
        }, 10);
    }
    
    startPremiumMode() {
        // –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–µ–º–∏–∏
        document.getElementById('instruction-text').textContent = '–ù–∞–∂–∏–º–∞–π—Ç–µ –æ–±–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ!';
        
        // –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –ø—Ä–µ–º–∏–∏ (–∫–∞–∂–¥—ã–µ 0.5 —Å–µ–∫—É–Ω–¥—ã)
        this.premiumInterval = setInterval(() => {
            if (this.premiumActive && this.gameActive) {
                this.processPremiumInput();
            }
        }, 500);
    }
    
    stopPremiumMode() {
        if (this.premiumInterval) {
            clearInterval(this.premiumInterval);
            this.premiumInterval = null;
        }
        document.getElementById('instruction-text').textContent = '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∫–æ–≥–¥–∞ —É–≤–∏–¥–∏—Ç–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é!';
    }
    
    processPremiumInput() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–∂–∞—Ç—ã –ª–∏ –æ–±–µ –∫–Ω–æ–ø–∫–∏
        if (this.premiumButtonsPressed.has('frontend') && this.premiumButtonsPressed.has('backend')) {
            // –î–∞—Ç—å –æ—á–∫–∏ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –æ–±–µ–∏—Ö –∫–Ω–æ–ø–æ–∫
            this.score += 30;
            this.combo += 1;
            this.updateScore();
            this.updateCombo();
            
            // –°–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            this.premiumButtonsPressed.clear();
            
            // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
            document.getElementById('pupa-btn').classList.add('correct');
            document.getElementById('lupa-btn').classList.add('correct');
            setTimeout(() => {
                document.getElementById('pupa-btn').classList.remove('correct');
                document.getElementById('lupa-btn').classList.remove('correct');
            }, 300);
        }
    }
    
    makeChoice(choice) {
        if (!this.gameActive || !this.currentTech) return;
        
        const pupaBtn = document.getElementById('pupa-btn');
        const lupaBtn = document.getElementById('lupa-btn');
        
        let isCorrect = false;
        let points = 0;
        
        if (this.premiumActive) {
            // –í —Ä–µ–∂–∏–º–µ –ø—Ä–µ–º–∏–∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –Ω–∞–∂–∞—Ç—ã–µ –∫–Ω–æ–ø–∫–∏
            this.premiumButtonsPressed.add(choice);
            return; // –ù–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ä–∞–∑—É, –∂–¥–µ–º –æ–±–µ –∫–Ω–æ–ø–∫–∏
        } else {
            // –û–±—ã—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
            const isFrontend = this.frontendTechs.includes(this.currentTech);
            const isBackend = this.backendTechs.includes(this.currentTech);
            
            if ((choice === 'frontend' && isFrontend) || (choice === 'backend' && isBackend)) {
                isCorrect = true;
                points = 10 + (this.combo * 5); // –ë–∞–∑–æ–≤—ã–µ –æ—á–∫–∏ + –±–æ–Ω—É—Å –∑–∞ –∫–æ–º–±–æ
                this.combo += 1;
            } else {
                isCorrect = false;
                this.combo = 0; // –°–±—Ä–æ—Å –∫–æ–º–±–æ –ø—Ä–∏ –æ—à–∏–±–∫–µ
                // –®—Ç—Ä–∞—Ñ –∑–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ
                this.score = Math.max(0, this.score - 5);
            }
        }
        
        // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
        if (isCorrect) {
            if (choice === 'frontend') {
                pupaBtn.classList.add('correct');
                setTimeout(() => pupaBtn.classList.remove('correct'), 300);
            } else {
                lupaBtn.classList.add('correct');
                setTimeout(() => lupaBtn.classList.remove('correct'), 300);
            }
            // –í–∏–±—Ä–æ-–æ—Ç–∫–ª–∏–∫ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
            this.vibrate([50]);
        } else {
            if (choice === 'frontend') {
                pupaBtn.classList.add('wrong');
                setTimeout(() => pupaBtn.classList.remove('wrong'), 300);
            } else {
                lupaBtn.classList.add('wrong');
                setTimeout(() => lupaBtn.classList.remove('wrong'), 300);
            }
            // –í–∏–±—Ä–æ-–æ—Ç–∫–ª–∏–∫ –¥–ª—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
            this.vibrate([200, 100, 200]);
        }
        
        if (isCorrect) {
            this.score += points;
            this.updateScore();
            this.updateCombo();
        } else {
            this.updateScore(); // –û–±–Ω–æ–≤–∏—Ç—å —Å—á–µ—Ç –ø–æ—Å–ª–µ —à—Ç—Ä–∞—Ñ–∞
        }
        
        // –û—á–∏—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–µ–º–∏–∏
        if (!this.premiumActive) {
            this.currentTech = null;
            document.getElementById('tech-text').textContent = '–ì–æ—Ç–æ–≤?';
            document.getElementById('tech-badge').classList.remove('premium');
        }
    }
    
    startTimer() {
        this.timerInterval = setInterval(() => {
            if (this.gameActive) {
                this.timeLeft--;
                this.updateTimer();
                
                if (this.timeLeft <= 0) {
                    this.endGame();
                }
            }
        }, 1000);
    }
    
    updateScore() {
        document.getElementById('score').textContent = this.score;
    }
    
    updateTimer() {
        document.getElementById('timer').textContent = this.timeLeft;
        
        // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –∫ –∫–æ–Ω—Ü—É
        const timerElement = document.getElementById('timer');
        if (this.timeLeft <= 3) {
            timerElement.style.color = '#ff6b6b';
            timerElement.style.animation = 'pulse 0.5s infinite';
        } else {
            timerElement.style.color = 'white';
            timerElement.style.animation = 'none';
        }
    }
    
    updateCombo() {
        document.getElementById('combo-count').textContent = this.combo;
    }
    
    endGame() {
        this.gameActive = false;
        
        // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
        if (this.techInterval) {
            clearInterval(this.techInterval);
        }
        if (this.timerInterval) {
            clearInterval(this.timerInterval);
        }
        if (this.premiumInterval) {
            clearInterval(this.premiumInterval);
        }
        
        // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∂–∏–º –ø—Ä–µ–º–∏–∏
        this.stopPremiumMode();
        
        // –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        this.showResults();
    }
    
    showResults() {
        document.getElementById('game-screen').classList.remove('active');
        document.getElementById('result-screen').classList.add('active');
        
        // –û–±–Ω–æ–≤–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—á–µ—Ç
        document.getElementById('final-score').textContent = this.score;
        
        // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        let message = '';
        if (this.score >= 200) {
            message = '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! üöÄ';
        } else if (this.score >= 100) {
            message = '–û—Ç–ª–∏—á–Ω–æ! üéâ';
        } else if (this.score >= 50) {
            message = '–•–æ—Ä–æ—à–æ! üëç';
        } else {
            message = '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë! üí™';
        }
        
        document.getElementById('result-message').textContent = message;
        
        // –û–±–Ω–æ–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤
        this.updateLeaderboard();
    }
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
    toggleTheme() {
        this.isAcidTheme = !this.isAcidTheme;
        const body = document.body;
        const themeBtn = document.getElementById('theme-btn');
        
        if (this.isAcidTheme) {
            body.classList.add('acid-theme');
            themeBtn.textContent = 'üåû';
        } else {
            body.classList.remove('acid-theme');
            themeBtn.textContent = 'üåô';
        }
        
        // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        localStorage.setItem('gameTheme', this.isAcidTheme ? 'acid' : 'normal');
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏-–ª–æ–≤—É—à–∫–∏
    trapButtonClicked() {
        if (!this.gameActive) return;
        
        // –®—Ç—Ä–∞—Ñ –∑–∞ –Ω–∞–∂–∞—Ç–∏–µ –ª–æ–≤—É—à–∫–∏
        this.score = Math.max(0, this.score - 10);
        this.combo = 0;
        this.updateScore();
        this.updateCombo();
        
        // –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        this.showComment('–û–π! –≠—Ç–æ –±—ã–ª–∞ –ª–æ–≤—É—à–∫–∞! üçå');
        
        // –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É-–ª–æ–≤—É—à–∫—É
        this.hideTrapButton();
        
        // –í–∏–±—Ä–æ-–æ—Ç–∫–ª–∏–∫
        this.vibrate([100, 50, 100]);
    }
    
    // –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É-–ª–æ–≤—É—à–∫—É
    showTrapButton() {
        if (Math.random() < 0.3 && !this.trapButtonVisible) { // 30% —à–∞–Ω—Å
            this.trapButtonVisible = true;
            document.getElementById('trap-btn').classList.add('visible');
            this.showComment('–°—Ç–æ–ø! –ù–µ –Ω–∞–∂–∏–º–∞–π —ç—Ç—É –∫–Ω–æ–ø–∫—É! üö´');
        }
    }
    
    hideTrapButton() {
        this.trapButtonVisible = false;
        document.getElementById('trap-btn').classList.remove('visible');
    }
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    showComment(text) {
        const bubble = document.getElementById('comment-bubble');
        const textEl = document.getElementById('comment-text');
        
        textEl.textContent = text;
        bubble.classList.add('show');
        
        // –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
        if (this.commentTimeout) {
            clearTimeout(this.commentTimeout);
        }
        
        // –°–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        this.commentTimeout = setTimeout(() => {
            bubble.classList.remove('show');
        }, 2000);
    }
    
    // –í–∏–±—Ä–æ-–æ—Ç–∫–ª–∏–∫
    vibrate(pattern) {
        if ('vibrate' in navigator) {
            navigator.vibrate(pattern);
        }
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
    loadLeaderboard() {
        const saved = localStorage.getItem('gameLeaderboard');
        return saved ? JSON.parse(saved) : [];
    }
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
    saveLeaderboard() {
        localStorage.setItem('gameLeaderboard', JSON.stringify(this.leaderboard));
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
    updateLeaderboard() {
        // –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        this.leaderboard.push({
            score: this.score,
            date: new Date().toLocaleDateString()
        });
        
        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –æ—á–∫–∞–º
        this.leaderboard.sort((a, b) => b.score - a.score);
        
        // –û—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–æ–ø-10
        this.leaderboard = this.leaderboard.slice(0, 10);
        
        // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        this.saveLeaderboard();
        
        // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å
        this.displayLeaderboard();
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
    displayLeaderboard() {
        const list = document.getElementById('leaderboard-list');
        list.innerHTML = '';
        
        this.leaderboard.forEach((entry, index) => {
            const item = document.createElement('div');
            item.className = 'leaderboard-item';
            item.innerHTML = `
                <span class="leaderboard-rank">${index + 1}.</span>
                <span>${entry.score} –æ—á–∫–æ–≤</span>
                <span class="leaderboard-score">${entry.date}</span>
            `;
            list.appendChild(item);
        });
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
document.addEventListener('DOMContentLoaded', function() {
    new Game();
});
